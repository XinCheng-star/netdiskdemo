package com.chengxin.netdiskdemo.dao;

import com.chengxin.netdiskdemo.dataobject.UserTable;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

@Mapper
public interface UserTableMapper {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_table
     *
     * @mbg.generated Thu Mar 12 16:28:43 GMT+08:00 2020
     */
    @Delete({
            "delete from user_table",
            "where id = #{id,jdbcType=CHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_table
     *
     * @mbg.generated Thu Mar 12 16:28:43 GMT+08:00 2020
     */
    @Insert({
            "insert into user_table (id, account, ",
            "password, is_active, ",
            "create_time, modify_time)",
            "values (#{id,jdbcType=CHAR}, #{account,jdbcType=VARCHAR}, ",
            "#{password,jdbcType=VARCHAR}, #{isActive,jdbcType=CHAR}, ",
            "now(), now())"
    })
    int insert(UserTable record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_table
     *
     * @mbg.generated Thu Mar 12 16:28:43 GMT+08:00 2020
     */
    @Select({
            "select",
            "id, account, password, is_active, create_time, modify_time",
            "from user_table",
            "where id = #{id,jdbcType=CHAR}"
    })
    @Results(id = "userMap", value = {
            @Result(column = "id", property = "id", jdbcType = JdbcType.CHAR, id = true),
            @Result(column = "account", property = "account", jdbcType = JdbcType.VARCHAR),
            @Result(column = "password", property = "password", jdbcType = JdbcType.VARCHAR),
            @Result(column = "is_active", property = "isActive", jdbcType = JdbcType.CHAR),
            @Result(column = "create_time", property = "createTime", jdbcType = JdbcType.TIMESTAMP),
            @Result(column = "modify_time", property = "modifyTime", jdbcType = JdbcType.TIMESTAMP)
    })
    UserTable selectByPrimaryKey(String id);


    @Select({
            "select",
            "id, account, password, is_active, create_time, modify_time",
            "from user_table",
            "where account = #{account,jdbcType=VARCHAR}"
    })
    @ResultMap(value = {"userMap"})
    UserTable getUserByAccount(String account);


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_table
     *
     * @mbg.generated Thu Mar 12 16:28:43 GMT+08:00 2020
     */
    @Select({
            "select",
            "id, account, password, is_active, create_time, modify_time",
            "from user_table"
    })
    @ResultMap(value = {"userMap"})
    List<UserTable> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_table
     *
     * @mbg.generated Thu Mar 12 16:28:43 GMT+08:00 2020
     */
    @Update({
            "update user_table",
            "set account = #{account,jdbcType=VARCHAR},",
            "password = #{password,jdbcType=VARCHAR},",
            "is_active = #{isActive,jdbcType=CHAR},",
            "modify_time = now()",
            "where id = #{id,jdbcType=CHAR}"
    })
    int updateByPrimaryKey(UserTable record);
}